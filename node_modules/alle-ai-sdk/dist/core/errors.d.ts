/**
 * Base error class for AlleAI SDK
 */
declare class AlleAIError extends Error {
    code: string;
    status?: number | undefined;
    details?: any | undefined;
    constructor(message: string, code: string, status?: number | undefined, details?: any | undefined);
}
/**
 * Error for validation failures
 */
declare class ValidationError extends AlleAIError {
    constructor(message: string, code?: string, details?: any);
}
/**
 * Error for API authentication issues
 */
declare class AuthenticationError extends AlleAIError {
    constructor(message: string, code?: string, details?: any);
}
/**
 * Error for invalid API requests
 */
declare class InvalidRequestError extends AlleAIError {
    constructor(message: string, code?: string, details?: any);
}
/**
 * Error for API rate limiting
 */
declare class RateLimitError extends AlleAIError {
    constructor(message: string, code?: string, details?: any);
}
/**
 * Error for server/service issues
 */
declare class ServiceUnavailableError extends AlleAIError {
    constructor(message: string, code?: string, details?: any);
}
/**
 * Error for network/connection issues
 */
declare class ConnectionError extends AlleAIError {
    constructor(message: string, code?: string, details?: any);
}
/**
 * Generic API error
 */
declare class APIError extends AlleAIError {
    constructor(message: string, code?: string, status?: number, details?: any);
}
export { AlleAIError, ValidationError, AuthenticationError, InvalidRequestError, RateLimitError, ServiceUnavailableError, ConnectionError, APIError };
