export interface ApiRequest {
    models: string[];
    messages: Message[];
    web_search?: boolean;
    comparison?: boolean | Comparison[];
    combination?: boolean | Combination[];
    response_format?: ResponseFormat;
    temperature?: number;
    max_tokens?: number;
    frequency_penalty?: number;
    presence_penalty?: number;
    stream?: boolean;
    model_specific_params?: Record<string, ModelSpecificParams>;
}
interface Message {
    system?: Content[];
    user?: Content[];
    assistants?: Record<string, Content[]>;
}
interface Content {
    type: "text" | "audio_url" | "image_url" | "video_url";
    [key: string]: any;
}
interface Comparison {
    type: "text" | "audio_url" | "image_url" | "video_url";
    models: string[];
}
interface Combination {
    type: "text" | "audio_url" | "image_url" | "video_url";
    models: string[];
}
interface ResponseFormat {
    type: "text" | "audio_url" | "image_url" | "video_url";
    model_specific?: Record<string, "text" | "audio_url" | "image_url" | "video_url">;
}
interface ModelSpecificParams {
    system?: string;
    temperature?: number;
    max_tokens?: number;
    frequency_penalty?: number;
    presence_penalty?: number;
}
export interface ImageGenerate {
    models: string[];
    prompt: string;
    n?: number;
    height?: number;
    width?: number;
    seed?: number | null;
    style_preset?: string | null;
    model_specific_params?: Record<string, any>;
}
export interface ImageEdit {
    models: string[];
    prompt: string;
    image_file: string;
}
export interface ttsTypes {
    models: string[];
    prompt: string;
    voice?: string;
    model_specific_params?: Record<string, any>;
}
export interface sttTypes {
    models: string[];
    audio_file: string;
    model_specific_params?: Record<string, any>;
}
export interface audioGenerateTypes {
    models: string[];
    prompt: string;
    model_specific_params?: Record<string, any>;
}
export interface audioEdit {
    models: string[];
    audioUrl: string;
    edit_type: "mix" | "trim" | "filter" | "enhance";
    prompt?: string;
    start_time?: number;
    end_time?: number;
    filters?: {
        noise_reduction?: boolean;
        equalizer?: Record<string, number>;
        reverb?: number;
        compression?: boolean;
    };
    output_format?: "mp3" | "wav" | "ogg";
    quality?: "standard" | "hd";
    preserve_original?: boolean;
}
export interface TextToVideoTypes {
    models: string[];
    prompt: string;
    duration?: number;
    loop?: boolean;
    aspect_ratio?: string;
    fps?: number;
    dimension?: string;
    resolution?: string;
    seed?: number;
    model_specific_params?: Record<string, any>;
}
export interface VideoEdit {
    models: string[];
    prompt: string;
    videoUrl: string;
}
export {};
